// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextArea should render correctly 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  color: #323232;
  border-width: 1px;
  border-color: #C2C2C2;
  border-style: solid;
  border-radius: 0.125rem;
  background: #FFFFFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
}

.c0:disabled {
  color: #323232;
  background: #FFFFFF;
  cursor: not-allowed;
}

.c0::-webkit-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

<TextArea
  disabled={false}
  height="100px"
  width="100%"
>
  <styled.textarea
    disabled={false}
    height="100px"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: block;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: ",
              [Function],
              ";
  font-size: 1rem;
  color: ",
              [Function],
              ";
  border-width: 1px;
  border-color: ",
              [Function],
              ";
  border-style: solid;
  border-radius: 0.125rem;
  background: ",
              [Function],
              ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  resize: none;

  &:disabled {
    color: ",
              [Function],
              ";
    background: ",
              [Function],
              ";
    cursor: not-allowed;
  }

  &::placeholder {
    color: ",
              [Function],
              ";
    font-size: 0.875rem;
  }
",
            ],
          },
          "displayName": "styled.textarea",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "textarea",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="100px"
      width="100%"
    >
      <textarea
        className="c0"
        disabled={false}
        height="100px"
        width="100%"
      />
    </StyledComponent>
  </styled.textarea>
</TextArea>
`;

exports[`TextArea should render correctly with disabled 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  color: #323232;
  border-width: 1px;
  border-color: #C2C2C2;
  border-style: solid;
  border-radius: 0.125rem;
  background: #FFFFFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
}

.c0:disabled {
  color: #323232;
  background: #FFFFFF;
  cursor: not-allowed;
}

.c0::-webkit-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

<TextArea
  disabled={true}
  height="100px"
  width="100%"
>
  <styled.textarea
    disabled={true}
    height="100px"
    width="100%"
  >
    <StyledComponent
      disabled={true}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: block;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: ",
              [Function],
              ";
  font-size: 1rem;
  color: ",
              [Function],
              ";
  border-width: 1px;
  border-color: ",
              [Function],
              ";
  border-style: solid;
  border-radius: 0.125rem;
  background: ",
              [Function],
              ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  resize: none;

  &:disabled {
    color: ",
              [Function],
              ";
    background: ",
              [Function],
              ";
    cursor: not-allowed;
  }

  &::placeholder {
    color: ",
              [Function],
              ";
    font-size: 0.875rem;
  }
",
            ],
          },
          "displayName": "styled.textarea",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "textarea",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="100px"
      width="100%"
    >
      <textarea
        className="c0"
        disabled={true}
        height="100px"
        width="100%"
      />
    </StyledComponent>
  </styled.textarea>
</TextArea>
`;

exports[`TextArea should render correctly with height 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 200px;
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  color: #323232;
  border-width: 1px;
  border-color: #C2C2C2;
  border-style: solid;
  border-radius: 0.125rem;
  background: #FFFFFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
}

.c0:disabled {
  color: #323232;
  background: #FFFFFF;
  cursor: not-allowed;
}

.c0::-webkit-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

<TextArea
  disabled={false}
  height="200px"
  width="100%"
>
  <styled.textarea
    disabled={false}
    height="200px"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: block;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: ",
              [Function],
              ";
  font-size: 1rem;
  color: ",
              [Function],
              ";
  border-width: 1px;
  border-color: ",
              [Function],
              ";
  border-style: solid;
  border-radius: 0.125rem;
  background: ",
              [Function],
              ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  resize: none;

  &:disabled {
    color: ",
              [Function],
              ";
    background: ",
              [Function],
              ";
    cursor: not-allowed;
  }

  &::placeholder {
    color: ",
              [Function],
              ";
    font-size: 0.875rem;
  }
",
            ],
          },
          "displayName": "styled.textarea",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "textarea",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="200px"
      width="100%"
    >
      <textarea
        className="c0"
        disabled={false}
        height="200px"
        width="100%"
      />
    </StyledComponent>
  </styled.textarea>
</TextArea>
`;

exports[`TextArea should render correctly with name 1`] = `
.c0 {
  display: block;
  width: 100%;
  height: 100px;
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  color: #323232;
  border-width: 1px;
  border-color: #C2C2C2;
  border-style: solid;
  border-radius: 0.125rem;
  background: #FFFFFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
}

.c0:disabled {
  color: #323232;
  background: #FFFFFF;
  cursor: not-allowed;
}

.c0::-webkit-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

<TextArea
  disabled={false}
  height="100px"
  name="mytextarea"
  width="100%"
>
  <styled.textarea
    disabled={false}
    height="100px"
    name="mytextarea"
    width="100%"
  >
    <StyledComponent
      disabled={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: block;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: ",
              [Function],
              ";
  font-size: 1rem;
  color: ",
              [Function],
              ";
  border-width: 1px;
  border-color: ",
              [Function],
              ";
  border-style: solid;
  border-radius: 0.125rem;
  background: ",
              [Function],
              ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  resize: none;

  &:disabled {
    color: ",
              [Function],
              ";
    background: ",
              [Function],
              ";
    cursor: not-allowed;
  }

  &::placeholder {
    color: ",
              [Function],
              ";
    font-size: 0.875rem;
  }
",
            ],
          },
          "displayName": "styled.textarea",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "textarea",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="100px"
      name="mytextarea"
      width="100%"
    >
      <textarea
        className="c0"
        disabled={false}
        height="100px"
        name="mytextarea"
        width="100%"
      />
    </StyledComponent>
  </styled.textarea>
</TextArea>
`;

exports[`TextArea should render correctly with width 1`] = `
.c0 {
  display: block;
  width: 200px;
  height: 100px;
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  color: #323232;
  border-width: 1px;
  border-color: #C2C2C2;
  border-style: solid;
  border-radius: 0.125rem;
  background: #FFFFFF;
  background-image: none;
  outline-width: 0;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  resize: none;
}

.c0:disabled {
  color: #323232;
  background: #FFFFFF;
  cursor: not-allowed;
}

.c0::-webkit-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::-moz-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0:-ms-input-placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

.c0::placeholder {
  color: #9B9B9B;
  font-size: 0.875rem;
}

<TextArea
  disabled={false}
  height="100px"
  width="200px"
>
  <styled.textarea
    disabled={false}
    height="100px"
    width="200px"
  >
    <StyledComponent
      disabled={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: block;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  padding: 0.7rem 1.4rem;
  box-sizing: border-box;
  font-family: ",
              [Function],
              ";
  font-size: 1rem;
  color: ",
              [Function],
              ";
  border-width: 1px;
  border-color: ",
              [Function],
              ";
  border-style: solid;
  border-radius: 0.125rem;
  background: ",
              [Function],
              ";
  background-image: none;
  outline-width: 0;
  user-select: text;
  resize: none;

  &:disabled {
    color: ",
              [Function],
              ";
    background: ",
              [Function],
              ";
    cursor: not-allowed;
  }

  &::placeholder {
    color: ",
              [Function],
              ";
    font-size: 0.875rem;
  }
",
            ],
          },
          "displayName": "styled.textarea",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "textarea",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="100px"
      width="200px"
    >
      <textarea
        className="c0"
        disabled={false}
        height="100px"
        width="200px"
      />
    </StyledComponent>
  </styled.textarea>
</TextArea>
`;
